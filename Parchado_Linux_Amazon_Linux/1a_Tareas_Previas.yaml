---
# ansible-playbook 1a_Tareas_Previas.yaml > 1_Tareas_Previas_1.log 2>&1
# ansible-playbook 1a_Tareas_Previas.yaml
# tail -f /tmp/parchado/tareas_previas.txt

- name: Tareas Previas
  hosts: linux
  become: yes
  gather_facts: True
  tasks:

# Requisitos previos

    - name: Crear directorio temporal para almacenar resultados del parchado
      file:
        path: /tmp/parchado
        state: directory

    - name: Crear archivo para almacenar resultados de las tareas Posteriores
      file:
        path: /tmp/parchado/tareas_previas.txt
        state: touch

    - name: Validacion de Kernel
      shell: |
        echo "##########################################################################################################"
        echo "### Validacion de Kernel"
        echo "##########################################################################################################"
        uname -a
      register: kernel

    - name: Mostrar la validación del kernel
      debug:
        msg: "La validación del kernel es {{ kernel.stdout }}"

    - name: Guardar resultado de validación del kernel
      lineinfile:
        line: "{{ kernel.stdout }}"
        dest: /tmp/parchado/tareas_previas.txt
        insertafter: EOF

    # COMPROBAR PARCHES AMAZON LINUX

    - name: Validar lista de parches requeridos en Amazon Linux 2
      shell: |
        echo "##########################################################################################################"
        echo "#### Listar todos los paquetes de seguridad disponibles en Amazon Linux 2"
        echo "##########################################################################################################"
        yum updateinfo list security
      register: updateinfo_amzn2
      when: ansible_distribution == "Amazon" and ansible_distribution_major_version == "2"

    - name: Validar lista de parches requeridos en Amazon Linux 2023
      shell: |
        echo "##########################################################################################################"
        echo "#### Listar todos los paquetes de seguridad disponibles en Amazon Linux 2023"
        echo "##########################################################################################################"
        dnf updateinfo list security
      register: updateinfo_amzn2023
      when: ansible_distribution == "Amazon" and ansible_distribution_major_version == "2023"

    - name: Mostrar lista de parches requeridos para Amazon Linux 2
      debug:
        msg: "{{ updateinfo_amzn2.stdout }}"
      when: ansible_distribution == "Amazon" and ansible_distribution_major_version == "2"

    - name: Mostrar lista de parches requeridos para Amazon Linux 2023
      debug:
        msg: "{{ updateinfo_amzn2023.stdout }}"
      when: ansible_distribution == "Amazon" and ansible_distribution_major_version == "2023"

    - name: Guardar resultado de validación de lista de parches requeridos para Amazon Linux 2
      lineinfile:
        line: "{{ updateinfo_amzn2.stdout }}"
        dest: /tmp/parchado/tareas_previas.txt
        insertafter: EOF
      when: ansible_distribution == "Amazon" and ansible_distribution_major_version == "2"

    - name: Guardar resultado de validación de lista de parches requeridos para Amazon Linux 2023
      lineinfile:
        line: "{{ updateinfo_amzn2023.stdout }}"
        dest: /tmp/parchado/tareas_previas.txt
        insertafter: EOF
      when: ansible_distribution == "Amazon" and ansible_distribution_major_version == "2023"

    - name: Validar fecha de ultimo reinicio
      shell: |
        echo "##########################################################################################################"
        echo "#### Validar fecha de ultimo reinicio"
        echo "##########################################################################################################"
        uptime
      register: uptime

    - name: Mostrar fecha de ultimo reinicio
      debug:
        msg: "La fecha de ultimo reinicio es {{ uptime.stdout }}"
    
    - name: Guardar resultado de validación de fecha de ultimo reinicio
      lineinfile:
        line: "{{ uptime.stdout }}"
        dest: /tmp/parchado/tareas_previas.txt
        insertafter: EOF

    - name: Validar salida a internet para descarga de parches
      shell: |
        echo "##########################################################################################################"
        echo "#### Validar salida a internet para descarga de parches"
        echo "##########################################################################################################"
        ping 8.8.8.8 -w 5
      register: ping

    - name: Mostrar salida a internet para descarga de parches
      debug:
        msg: "La salida a internet para descarga de parches es {{ ping.stdout }}"
    
    - name: Guardar resultado de validación de salida a internet para descarga de parches
      lineinfile:
        line: "{{ ping.stdout }}"
        dest: /tmp/parchado/tareas_previas.txt
        insertafter: EOF

    - name: Validar version de Sistema Operativo
      shell: |
        echo "##########################################################################################################"
        echo "#### Validar version de Sistema Operativo"
        echo "##########################################################################################################"
        cat /etc/*release
      register: release
    
    - name: Mostrar version de Sistema Operativo
      debug:
        msg: "La version de Sistema Operativo es {{ release.stdout }}"
    
    - name: Guardar resultado de validación de version de Sistema Operativo
      lineinfile:
        line: "{{ release.stdout }}"
        dest: /tmp/parchado/tareas_previas.txt  
        insertafter: EOF

    - name: Validar estado de servicios y performance
      shell: |
        echo "##########################################################################################################"
        echo "#### Validar estado de servicios y performance"
        echo "##########################################################################################################"
        top -n 1 -b
      register: top
    
    - name: Mostrar estado de servicios y performance
      debug:
        msg: "El estado de servicios y performance es {{ top.stdout }}"
    
    - name: Guardar resultado de validación de estado de servicios y performance
      lineinfile:
        line: "{{ top.stdout }}"
        dest: /tmp/parchado/tareas_previas.txt
        insertafter: EOF

    - name: Validar espacio en la partición / de cada servidor.
      shell: |
        echo "##########################################################################################################"
        echo "#### Validar espacio en la partición / de cada servidor."
        echo "##########################################################################################################"
        df -hT
      register: df

    - name: Mostrar espacio en la partición / de cada servidor.
      debug:
        msg: "El espacio en la partición / de cada servidor es {{ df.stdout }}"
    
    - name: Guardar resultado de validación de espacio en la partición / de cada servidor.
      lineinfile:
        line: "{{ df.stdout }}"
        dest: /tmp/parchado/tareas_previas.txt
        insertafter: EOF

    - name: Revisar los ultimos 50 logs historicos
      shell: |
        echo "##########################################################################################################"
        echo "#### Revisar los ultimos 50 logs historicos"
        echo "##########################################################################################################"
        history 50
      register: history

    - name: Mostrar los ultimos 50 logs historicos
      debug:
        msg: "Los ultimos 50 logs historicos son {{ history.stdout }}"   
    
    - name: Guardar resultado de validación de los ultimos 50 logs historicos
      lineinfile:
        line: "{{ history.stdout }}"
        dest: /tmp/parchado/tareas_previas.txt
        insertafter: EOF
...